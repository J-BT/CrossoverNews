name: 'crossoverNews'

services:
  mysqldb:
    image: mysql:8.0
    env_file:
      - docker/env/prod/mysqldb.env
    volumes:
      - mysqldb-data:/var/lib/mysql
      - ./docker/dbInit/mysqldb:/docker-entrypoint-initdb.d:ro
    networks:
      lpdiwa-net:
        aliases:
          - mysqldb
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin -uroot -p$${MYSQL_ROOT_PASSWORD} -h 127.0.0.1 ping" ] #pour prod ajouter  :  --silent"
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s
    ports:
      - 127.0.0.1:3306:3306

  symfony:
    build:
      context: ./docker/images/symfony
      args:
        - http_proxy=${HTTP_PROXY:-}
        - https_proxy=${HTTPS_PROXY:-}
        - no_proxy=${NO_PROXY:-}
    env_file:
      - docker/env/prod/symfony.env
    environment:
      - http_proxy=${HTTP_PROXY:-}
      - https_proxy=${HTTPS_PROXY:-}
      - no_proxy=${NO_PROXY:-}
    volumes:
      - api-vendor:/var/www/app/vendor
      - ./docker/conf/dev/symfony_php.ini:/usr/local/etc/php/php.ini:ro
      - ./api:/var/www/app
    working_dir: /var/www/app
    networks:
      lpdiwa-net:
        aliases:
          - symfony
    restart: always
    command: bash -c "composer install --no-dev && php-fpm"
    healthcheck:
      test: [ "CMD", "pidof", "php-fpm" ]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s

  http:
    image: nginx:1.23-alpine
    depends_on:
      - symfony
    volumes:
      - ./app:/var/www/app:ro
      - ./docker/conf/prod/nginx_default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      lpdiwa-net:
        aliases:
          - httpsrv
    ports:
      - 80:80
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "curl -so /dev/null http://localhost:80/" ]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s

  npm:
    image: node:18
    env_file:
      - docker/env/prod/npm.env
    environment:
      - http_proxy=${HTTP_PROXY:-}
      - https_proxy=${HTTPS_PROXY:-}
      - no_proxy=${NO_PROXY:-}
    volumes:
      - ./app:/var/www/app
    working_dir: /var/www/app
    command: bash -c "npm ci && npm run build"

volumes:
  mysqldb-data:
  api-vendor:


networks:
  lpdiwa-net:
